{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n  canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n          return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n  }  \r\n} ","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n\n\n","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers';\r\n\r\n  constructor (private useService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.useService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor (private useService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.useService.getUser(route.params['id']).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor (private useService: UserService, private authService: AuthService,\r\n    private router: Router, private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n    return this.useService.getUser(this.authService.decodedToken.nameid).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving your data');\r\n        this.router.navigate(['/members']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor (private useService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.useService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor (private useService: UserService, private router: Router,\r\n              private alertify: AlertifyService, private authService: AuthService ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.useService.getMessages(this.authService.decodedToken.nameid, this.pageNumber,\r\n                                       this.pageSize, this.messageContainer ).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving messages');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login (model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n    map((response: any) => {\n      const user = response;\n         if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            console.error(applicationError);\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError && typeof serverError === 'object') {\r\n            for (const key in serverError) {\r\n              if (serverError[key]) {\r\n                modalStateErrors += serverError[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n        return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n/* const httpOptions = {\n  headers: new HttpHeaders({\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n}; */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(\n    page?,\n    itemsPerPage?,\n    userParams?,\n    likesParams?\n  ): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<\n      User[]\n    >();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParams === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if (likesParams === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(\n      this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\n      {}\n    );\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n        .pipe(\n           map(response => {\n              paginatedResult.result = response.body;\n              if (response.headers.get('Pagination') != null) {\n                  paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n              }\n\n              return paginatedResult;\n          })\n        );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n        .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-nav> </app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor (private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user ;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver} from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver} from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      MemberListComponent,\n      ListsComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      TabsModule.forRoot(),\n      ButtonsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      NgxGalleryModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n      })\n   ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges,\n      ListsResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n    constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  /* getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe(\n      response => {\n        this.values = response;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  } */\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\n  </div>\\n</div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n<pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n  (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n  >\\n\\n</pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n              private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","module.exports = \".card:hover img {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n  opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n  -webkit-transform: scale(1.0, 1.0);\\r\\n          transform: scale(1.0, 1.0);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper{\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n  position: absolute;\\r\\n  bottom: -30%;\\r\\n  left: 0px;\\r\\n  right: 0px;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n  bottom: 0;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n  transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">    \\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"> <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\">\\n        <i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"> <button class=\\\"btn btn-primary\\\">\\n        <i class=\\\"fa fa-heart\\\" (click)=\\\"sendLike(user.id)\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"> <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>{{user.knownAs}}, {{user.age}}</h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService,\n              private userService: UserService, private alertify: AlertifyService ) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n     this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;  \\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  /* background-color: #fff; */\\r\\n  border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img\\n          class=\\\"card-img-top img-thumbnail\\\"\\n          src=\\\"{{ user.photoUrl || '../../../../../assets/user.png'}}\\\"\\n          alt=\\\"{{ user.knownAs }}\\\"\\n        />\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location: </strong>\\n            <p>{{ user.city }}, {{ user.country }}</p>\\n          </div>\\n          <div>\\n            <strong>Age: </strong>\\n            <p>{{ user.age }}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active: </strong>\\n            <p>{{ user.lastActive | timeAgo }}</p>\\n          </div>\\n          <div>\\n            <strong>Member since: </strong>\\n            <p>{{ user.created  | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class #memberTabs>\\n          <tab heading=\\\"About {{ user.knownAs }}\\\">\\n            <h4>Description</h4>\\n            <p>{{ user.introduction }}</p>\\n            <h4>Looking For</h4>\\n            <p>{{ user.lookingFor }}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{ user.interests }}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n              <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"> </app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') membersTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.membersTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n   this.membersTabs.tabs[tabId].active = true;\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;  \\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  /* background-color: #fff; */\\r\\n  border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n        <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <strong>Information: </strong> You have made changes. Any unsaved changes will be lost! \\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img\\n          class=\\\"card-img-top img-thumbnail\\\"\\n          src=\\\"{{photoUrl || '../../../../../assets/user.png'}}\\\"\\n          alt=\\\"{{ user.knownAs }}\\\"\\n        />\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location: </strong>\\n            <p>{{ user.city }}, {{ user.country }}</p>\\n          </div>\\n          <div>\\n            <strong>Age: </strong>\\n            <p>{{ user.age }}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active: </strong>\\n            <p>{{ user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since: </strong>\\n            <p>{{ user.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>        \\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset>\\n          <tab heading=\\\"Edit Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <h4>Looking For</h4>\\n              <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n              <h4>Interests</h4>\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n              </div>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" \\n            (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\n    private userService: UserService, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('Profile Updated successfully');\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n    <form class=\\\"form-inline\\\"  #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\"  novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"minAge\\\">Age From</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" \\n           [(ngModel)]=\\\"userParams.minAge\\\"  id=\\\"minAge\\\" name=\\\"minAge\\\">\\n        </div>\\n      \\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"maxAge\\\">Age To</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" \\n          [(ngModel)]=\\\"userParams.maxAge\\\" id=\\\"maxAge\\\" name=\\\"maxAge\\\">\\n        </div>\\n      \\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"gender\\\">Show: </label>\\n          <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" \\n          [(ngModel)]=\\\"userParams.gender\\\" id=\\\"gender\\\" name=\\\"gender\\\">\\n            <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n              {{gender.display}}\\n            </option>\\n          </select>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">Reset Filter</button>\\n\\n        <div class=\\\"col\\\">\\n            <div class=\\\"btn-group float-right\\\">\\n              <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n              <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n            </div>\\n        </div>\\n      \\n      </form>\\n      <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\"class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" \\n              [totalItems]=\\\"pagination.totalItems\\\" \\n              [itemsPerPage] =\\\"pagination.itemsPerPage\\\"\\n              [(ngModel)]=\\\"pagination.currentPage\\\"\\n              (pageChanged)=\\\"pageChanged($event)\\\"\\n  previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n</pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n   this.route.data.subscribe(data => {\n     this.users = data['users'].result;\n     this.pagination = data['users'].pagination;\n   });\n\n   this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n   this.userParams.minAge = 18;\n   this.userParams.maxAge = 99;\n   this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<User[]>) => {\n      this.users = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".card {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n  margin-bottom: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n  height: 50px;\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  overflow-y: scroll;\\r\\n  height: 400px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>\\n        No messages yet... Say Hi by using the message box below\\n      </p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n          <div *ngIf=\\\"message.senderId == recipientId\\\">\\n            <span class=\\\"chat-img float-left\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n                <small class=\\\"text-muted float-right\\\">\\n                  <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                </small>\\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n            <span class=\\\"chat-img float-right\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                <small class=\\\"text-muted\\\">\\n                  <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                  <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                  <span *ngIf=\\\"message.isRead\\\"class=\\\"text-success\\\">(read {{message.dateRead | timeAgo}})</span>\\n                </small>\\n                <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>                \\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newMessage.content\\\" name=\\\"content\\\" required\\n        class=\\\"form-control input-sm\\\" placeholder=\\\"Send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n         <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button> \\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService,\n              private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n        .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n        .pipe(\n          tap(messages => {\n              for (let i = 0; i < messages.length; i++) {\n                if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n                    this.userService.markAsRead(currentUserId, messages[i].id);\n                }\n              }\n          })\n        )\n        .subscribe(messages => {\n          this.messages = messages;\n        }, error => {\n          this.alertify.error(error);\n        });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage).subscribe((message: Message) => {\n      this.messages.unshift(message);\n      this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \"img.img-thumbnail {\\r\\n  height: 100px;\\r\\n  min-width: 100px !important;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n  border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n  color: transparent;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\n    <div class=\\\"text-center text-white\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm mr-2\\\" \\n        (click)=\\\"setMainPhoto(photo)\\\" \\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePhoto(photo.id)\\\" \\n        [disabled]=\\\"photo.isMain\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n  <div class=\\\"col-md-3\\\">\\n\\n      <h3>Add Photos</h3>\\n\\n      <div ng2FileDrop\\n           [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n           (fileOver)=\\\"fileOverBase($event)\\\"\\n           [uploader]=\\\"uploader\\\"\\n           class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n           <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n          Drop Photos Here\\n      </div>\\n\\n       Multiple\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n      Single\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n      <h3>Upload queue</h3>\\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n      <table class=\\\"table\\\">\\n          <thead>\\n          <tr>\\n              <th width=\\\"50%\\\">Name</th>\\n              <th>Size</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let item of uploader.queue\\\">\\n              <td><strong>{{ item?.file?.name }}</strong></td>\\n              <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          </tr>\\n          </tbody>\\n      </table>\\n\\n      <div>\\n          <div class=\\\"mb-4\\\"> \\n              Queue progress:\\n              <div class=\\\"progress mt-2\\\">\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n              </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                  (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"fa fa-upload\\\"></span> Upload\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                  (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n              <span class=\\\"fa fa-ban\\\"></span> Cancel \\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                  (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n              <span class=\\\"fa fa-trash\\\"></span> Remove \\n          </button>\\n      </div>\\n\\n  </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n   uploader: FileUploader;\n   hasBaseDropZoneOver = false;\n   baseUrl = environment.apiUrl;\n   currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; } ;\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n        this.alertify.success('Photo has been deleted');\n      }, error => {\n         this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n\n}\n","module.exports = \"table {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n  max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                <strong>{{message.recipientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\" >Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\" \\n                [totalItems]=\\\"pagination.totalItems\\\"\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n              private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService\n        .getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n                     this.pagination.itemsPerPage, this.messageContainer)\n        .subscribe((res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        }, error => {\n          this.alertify.error(error);\n        });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this message', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid)\n                      .subscribe(() => {\n                        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n                        this.alertify.success('Message has been deleted');\n                      }, error => {\n                        this.alertify.error('Failed to delete the message');\n                      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n  cursor: pointer;\\r\\n}\\r\\nimg {\\r\\n  max-height: 50px;\\r\\n  border: 1px solid white;\\r\\n  display: inline;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" >Dating App</a>\\n\\n      <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\" > Matches </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\" >Lists</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\" >Messages</a>\\n        </li>\\n      </ul>\\n    \\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n        <span class=\\\"mr-2\\\">\\n          <img src=\\\"{{photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"\\\">\\n        </span>\\n        <a class=\\\"dropdown-toggle\\\" dropdownToggle>Welcome {{authService.decodedToken?.unique_name | titlecase}}</a>      \\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\"><i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n         <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\n        </div>\\n      </div>\\n    \\n      <form *ngIf=\\\"!loggedIn()\\\"  #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\n         placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\"/>\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" \\n         placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\"/>\\n        <button [disabled]=\\\"!loginForm.valid\\\"  class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login  </button>\\n      </form>\\n  </div>  \\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {} ;\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  /* login method */\n  login () {\n    this.authService.login(this.model).subscribe(next => {\n     this.alertify.success('Successfully Logged in!');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  /* logged in */\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  /* lougout */\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logged out!');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr />\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input\\n        class=\\\"mr-3\\\"\\n        type=\\\"radio\\\"\\n        value=\\\"male\\\"\\n        formControlName=\\\"gender\\\"\\n      />Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input\\n        class=\\\"mr-3\\\"\\n        type=\\\"radio\\\"\\n        value=\\\"female\\\"\\n        formControlName=\\\"gender\\\"\\n      />Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('username').errors &&\\n          registerForm.get('username').touched\\n      }\\\"\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"username\\\"\\n      placeholder=\\\"Username\\\"\\n    />\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('knownAs').errors &&\\n          registerForm.get('knownAs').touched\\n      }\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"Known as\\\"\\n      formControlName=\\\"knownAs\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('knownAs').touched &&\\n        registerForm.get('knownAs').hasError('required')\\n      \\\"\\n    >\\n      Known as is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('dateOfBirth').errors &&\\n          registerForm.get('dateOfBirth').touched\\n      }\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"Date of Birth\\\"\\n      formControlName=\\\"dateOfBirth\\\"\\n      type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('dateOfBirth').touched &&\\n        registerForm.get('dateOfBirth').hasError('required')\\n      \\\"\\n    >\\n      Date of Birth is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('city').errors && registerForm.get('city').touched\\n      }\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"City\\\"\\n      formControlName=\\\"city\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('city').touched &&\\n        registerForm.get('city').hasError('required')\\n      \\\"\\n    >\\n      City is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('country').errors &&\\n          registerForm.get('country').touched\\n      }\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"Country\\\"\\n      formControlName=\\\"country\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('country').touched &&\\n        registerForm.get('country').hasError('required')\\n      \\\"\\n    >\\n      Country is required\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          registerForm.get('password').errors &&\\n          registerForm.get('password').touched\\n      }\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"password\\\"\\n      placeholder=\\\"Password\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('password').hasError('required') &&\\n        registerForm.get('password').touched\\n      \\\"\\n    >\\n      Password is required\\n    </div>\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('password').hasError('minlength') &&\\n        registerForm.get('password').touched\\n      \\\"\\n    >\\n      Password must be at least 6 characters\\n    </div>\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('password').hasError('maxlength') &&\\n        registerForm.get('password').touched\\n      \\\"\\n    >\\n      Password cannot exceed 8 characters\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input\\n      [ngClass]=\\\"{\\n        'is-invalid':\\n          (registerForm.get('confirmPassword').errors &&\\n            registerForm.get('confirmPassword').touched) ||\\n          (registerForm.get('confirmPassword').touched &&\\n            registerForm.hasError('mismatch'))\\n      }\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"confirmPassword\\\"\\n      placeholder=\\\"Confirm Password\\\"\\n    />\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.get('confirmPassword').hasError('required') &&\\n        registerForm.get('confirmPassword').touched\\n      \\\"\\n    >\\n      Password is required\\n    </div>\\n    <div\\n      class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"\\n        registerForm.hasError('mismatch') &&\\n        registerForm.get('confirmPassword').touched\\n      \\\"\\n    >\\n      Passwords must match\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success mr-2\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n      Cancel\\n    </button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService,\n              private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    },\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    console.log('Cancelled');\n  }\n}\n","import {Routes} from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    {path: '', component: HomeComponent },\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\r\n            {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\r\n            {path: 'member/edit', component: MemberEditComponent,\r\n                    resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n            {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\r\n        ]\r\n    },\r\n    {path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}